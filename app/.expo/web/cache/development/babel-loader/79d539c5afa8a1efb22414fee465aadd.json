{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\FINAL\\\\Project\\\\pgp\\\\App.js\";\n\nimport React, { useState } from 'react';\nimport SignUp from \"./src/SignUp\";\nimport Login from \"./src/Login\";\nimport * as Font from 'expo-font';\nimport { AppLoading } from 'expo';\nimport ForgotPass from \"./src/ForgotPass\";\nimport Otp from \"./src/otp\";\n\nvar getFonts = function getFonts() {\n  return Font.loadAsync({\n    'nunito-regular': require(\"./assets/fonts/Nunito-Regular.ttf\"),\n    'nunito-bold': require(\"./assets/fonts/Nunito-Bold.ttf\"),\n    'nunito-semi': require(\"./assets/fonts/Nunito-SemiBold.ttf\")\n  });\n};\n\nvar YourApp = function YourApp() {\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      fontsLoaded = _useState2[0],\n      setFontsLoaded = _useState2[1];\n\n  if (fontsLoaded) {\n    return React.createElement(Otp, {\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 7\n      }\n    });\n  } else {\n    return React.createElement(AppLoading, {\n      startAsync: getFonts,\n      onFinish: function onFinish() {\n        return setFontsLoaded(true);\n      },\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 7\n      }\n    });\n  }\n};\n\nexport default YourApp;","map":{"version":3,"sources":["D:/FINAL/Project/pgp/App.js"],"names":["React","useState","SignUp","Login","Font","AppLoading","ForgotPass","Otp","getFonts","loadAsync","require","YourApp","fontsLoaded","setFontsLoaded"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,MAAP;AACA,OAAOC,KAAP;AACA,OAAO,KAAKC,IAAZ,MAAsB,WAAtB;AACA,SAASC,UAAT,QAA2B,MAA3B;AACA,OAAOC,UAAP;AACA,OAAOC,GAAP;;AAEA,IAAMC,QAAQ,GAAG,SAAXA,QAAW;AAAA,SAAMJ,IAAI,CAACK,SAAL,CAAe;AAClC,sBAAmBC,OAAO,qCADQ;AAElC,mBAAgBA,OAAO,kCAFW;AAGlC,mBAAgBA,OAAO;AAHW,GAAf,CAAN;AAAA,CAAjB;;AAMA,IAAMC,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA,kBACkBV,QAAQ,CAAC,KAAD,CAD1B;AAAA;AAAA,MACbW,WADa;AAAA,MACAC,cADA;;AAEpB,MAAGD,WAAH,EAAe;AACb,WACE,oBAAC,GAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAGD,GAJD,MAIO;AACL,WACE,oBAAC,UAAD;AACC,MAAA,UAAU,EAAEJ,QADb;AAEC,MAAA,QAAQ,EAAE;AAAA,eAAKK,cAAc,CAAC,IAAD,CAAnB;AAAA,OAFX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF;AAMD;AACF,CAdD;;AAgBA,eAAeF,OAAf","sourcesContent":["import React, {useState} from 'react';\nimport SignUp from './src/SignUp'\nimport Login from './src/Login'\nimport * as Font from 'expo-font'\nimport { AppLoading } from 'expo';\nimport ForgotPass from './src/ForgotPass'\nimport Otp from './src/otp'\n\nconst getFonts = () => Font.loadAsync({\n    'nunito-regular' : require('./assets/fonts/Nunito-Regular.ttf'),\n    'nunito-bold' : require('./assets/fonts/Nunito-Bold.ttf'),\n    'nunito-semi' : require('./assets/fonts/Nunito-SemiBold.ttf'),\n})\n  \nconst YourApp = () => {\n  const [fontsLoaded, setFontsLoaded] = useState(false)\n  if(fontsLoaded){\n    return(\n      <Otp />\n    )\n  } else {\n    return(\n      <AppLoading\n       startAsync={getFonts}\n       onFinish={()=> setFontsLoaded(true)}\n       />\n    )\n  }\n}\n\nexport default YourApp;"]},"metadata":{},"sourceType":"module"}
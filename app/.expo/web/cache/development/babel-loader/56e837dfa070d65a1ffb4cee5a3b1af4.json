{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\FINAL\\\\Project\\\\pgp\\\\App.js\";\n\nimport React, { useState } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TouchableNativeFeedback from \"react-native-web/dist/exports/TouchableNativeFeedback\";\nimport Constants from \"expo-constants\";\n\nvar randomHexColor = function randomHexColor() {\n  return \"#000000\".replace(/0/g, function () {\n    return (~~(Math.random() * 16)).toString(16);\n  });\n};\n\nvar App = function App() {\n  var _useState = useState(randomHexColor()),\n      _useState2 = _slicedToArray(_useState, 2),\n      rippleColor = _useState2[0],\n      setRippleColor = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rippleOverflow = _useState4[0],\n      setRippleOverflow = _useState4[1];\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 5\n    }\n  }, React.createElement(TouchableNativeFeedback, {\n    onPress: function onPress() {\n      setRippleColor(randomHexColor());\n      setRippleOverflow(!rippleOverflow);\n    },\n    background: TouchableNativeFeedback.Ripple(rippleColor, rippleOverflow),\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }\n  }, React.createElement(View, {\n    style: styles.touchable,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 9\n    }\n  }, React.createElement(Text, {\n    style: styles.text,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 11\n    }\n  }, \"TouchableNativeFeedback\"))));\n};\n\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: \"#ecf0f1\",\n    padding: 8\n  },\n  touchable: {\n    flex: 0.5,\n    borderColor: \"black\",\n    borderWidth: 1\n  },\n  text: {\n    alignSelf: \"center\"\n  }\n});\nexport default App;","map":{"version":3,"sources":["D:/FINAL/Project/pgp/App.js"],"names":["React","useState","Constants","randomHexColor","replace","Math","random","toString","App","rippleColor","setRippleColor","rippleOverflow","setRippleOverflow","styles","container","TouchableNativeFeedback","Ripple","touchable","text","StyleSheet","create","flex","justifyContent","paddingTop","statusBarHeight","backgroundColor","padding","borderColor","borderWidth","alignSelf"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;;;AAEA,OAAOC,SAAP,MAAsB,gBAAtB;;AAEA,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3B,SAAO,UAAUC,OAAV,CAAkB,IAAlB,EAAwB,YAAW;AACxC,WAAO,CAAC,CAAC,EAAEC,IAAI,CAACC,MAAL,KAAgB,EAAlB,CAAF,EAAyBC,QAAzB,CAAkC,EAAlC,CAAP;AACD,GAFM,CAAP;AAGD,CAJD;;AAKA,IAAMC,GAAG,GAAG,SAANA,GAAM,GAAM;AAAA,kBACsBP,QAAQ,CAACE,cAAc,EAAf,CAD9B;AAAA;AAAA,MACTM,WADS;AAAA,MACIC,cADJ;;AAAA,mBAE4BT,QAAQ,CAAC,KAAD,CAFpC;AAAA;AAAA,MAETU,cAFS;AAAA,MAEOC,iBAFP;;AAGhB,SACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,uBAAD;AACE,IAAA,OAAO,EAAE,mBAAM;AACbJ,MAAAA,cAAc,CAACP,cAAc,EAAf,CAAd;AACAS,MAAAA,iBAAiB,CAAC,CAACD,cAAF,CAAjB;AACD,KAJH;AAKE,IAAA,UAAU,EAAEI,uBAAuB,CAACC,MAAxB,CAA+BP,WAA/B,EAA4CE,cAA5C,CALd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAOE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEE,MAAM,CAACI,SAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,oBAAC,IAAD;AAAM,IAAA,KAAK,EAAEJ,MAAM,CAACK,IAApB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BADF,CAPF,CADF,CADF;AAeD,CAlBD;;AAoBA,IAAML,MAAM,GAAGM,UAAU,CAACC,MAAX,CAAkB;AAC/BN,EAAAA,SAAS,EAAE;AACTO,IAAAA,IAAI,EAAE,CADG;AAETC,IAAAA,cAAc,EAAE,QAFP;AAGTC,IAAAA,UAAU,EAAErB,SAAS,CAACsB,eAHb;AAITC,IAAAA,eAAe,EAAE,SAJR;AAKTC,IAAAA,OAAO,EAAE;AALA,GADoB;AAQ/BT,EAAAA,SAAS,EAAE;AAAEI,IAAAA,IAAI,EAAE,GAAR;AAAaM,IAAAA,WAAW,EAAE,OAA1B;AAAmCC,IAAAA,WAAW,EAAE;AAAhD,GARoB;AAS/BV,EAAAA,IAAI,EAAE;AAAEW,IAAAA,SAAS,EAAE;AAAb;AATyB,CAAlB,CAAf;AAYA,eAAerB,GAAf","sourcesContent":["import React, { useState } from \"react\";\nimport { Text, View, StyleSheet, TouchableNativeFeedback } from \"react-native\";\nimport Constants from \"expo-constants\";\n\nconst randomHexColor = () => {\n  return \"#000000\".replace(/0/g, function() {\n    return (~~(Math.random() * 16)).toString(16);\n  });\n};\nconst App = () => {\n  const [rippleColor, setRippleColor] = useState(randomHexColor());\n  const [rippleOverflow, setRippleOverflow] = useState(false);\n  return (\n    <View style={styles.container}>\n      <TouchableNativeFeedback\n        onPress={() => {\n          setRippleColor(randomHexColor());\n          setRippleOverflow(!rippleOverflow);\n        }}\n        background={TouchableNativeFeedback.Ripple(rippleColor, rippleOverflow)}\n      >\n        <View style={styles.touchable}>\n          <Text style={styles.text}>TouchableNativeFeedback</Text>\n        </View>\n      </TouchableNativeFeedback>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    justifyContent: \"center\",\n    paddingTop: Constants.statusBarHeight,\n    backgroundColor: \"#ecf0f1\",\n    padding: 8\n  },\n  touchable: { flex: 0.5, borderColor: \"black\", borderWidth: 1 },\n  text: { alignSelf: \"center\" }\n});\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
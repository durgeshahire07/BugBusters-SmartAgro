{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\FINAL\\\\Project\\\\pgp\\\\src\\\\Otp.js\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useRef, useEffect, useState } from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Platform from \"react-native-web/dist/exports/Platform\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport SafeAreaView from \"react-native-web/dist/exports/SafeAreaView\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport RefreshControl from \"react-native-web/dist/exports/RefreshControl\";\nimport * as Animatable from 'react-native-animatable';\nimport { LinearGradient } from 'expo-linear-gradient';\nimport FontAwesome from \"@expo/vector-icons/FontAwesome\";\nimport Feather from \"@expo/vector-icons/Feather\";\nimport { BorderlessButton } from 'react-native-gesture-handler';\nimport axios from 'axios';\n\nvar Otp = function Otp(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n  var _route$params = route.params,\n      UserId = _route$params.UserId,\n      otp = _route$params.otp;\n  var otpPin2 = JSON.stringify(otp);\n  var pin1Ref = React.useRef();\n  var pin2Ref = React.useRef();\n  var pin3Ref = React.useRef();\n  var pin4Ref = React.useRef();\n\n  var _React$useState = React.useState({\n    pin1: '',\n    pin2: '',\n    pin3: '',\n    pin4: ''\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      pin = _React$useState2[0],\n      setPin = _React$useState2[1];\n\n  var pin1 = pin.pin1,\n      pin2 = pin.pin2,\n      pin3 = pin.pin3,\n      pin4 = pin.pin4;\n\n  function submitHandler() {\n    var otpPin, config, key, response;\n    return _regeneratorRuntime.async(function submitHandler$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            otpPin = '' + pin1 + pin2 + pin3 + pin4;\n            console.log(otpPin);\n\n            if (!(otpPin === otpPin2)) {\n              _context.next = 19;\n              break;\n            }\n\n            _context.prev = 3;\n            config = {\n              method: 'post',\n              url: 'http://127.0.0.1:3000/api/v1/otp/get',\n              headers: {},\n              data: UserId\n            };\n            _context.next = 7;\n            return _regeneratorRuntime.awrap(axios(config));\n\n          case 7:\n            key = _context.sent;\n            response = key;\n            console.log(response);\n\n            if (response.data.success) {\n              navigation.push('Login');\n            } else {\n              alert(\"Something went wrong\");\n            }\n\n            _context.next = 17;\n            break;\n\n          case 13:\n            _context.prev = 13;\n            _context.t0 = _context[\"catch\"](3);\n            console.log(_context.t0);\n            alert(_context.t0);\n\n          case 17:\n            _context.next = 20;\n            break;\n\n          case 19:\n            alert(\"Wrong OTP\");\n\n          case 20:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, [[3, 13]], Promise);\n  }\n\n  return React.createElement(View, {\n    style: styles.container,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, React.createElement(ScrollView, {\n    contentContainerStyle: {\n      flexGrow: 1,\n      justifyContent: 'center'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 1\n    }\n  }, React.createElement(StatusBar, {\n    backgroundColor: \"#4700b3\",\n    barStyle: \"light-content\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }\n  }), React.createElement(View, {\n    style: styles.header,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 13\n    }\n  }), React.createElement(Animatable.View, {\n    animation: \"fadeInUp\",\n    style: styles.footer,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 13\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontFamily: 'nunito-bold',\n      fontSize: 28,\n      color: '#4700b3'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 17\n    }\n  }, \"Verification Code\"), React.createElement(Text, {\n    style: {\n      fontFamily: 'nunito-semi',\n      fontSize: 15,\n      paddingBottom: 30,\n      color: 'grey'\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 17\n    }\n  }, \"Enter the OTP code sent to your email\"), React.createElement(View, {\n    style: styles.containerInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 17\n    }\n  }, React.createElement(TextInput, {\n    ref: pin1Ref,\n    onChangeText: function onChangeText(pin1) {\n      setPin(_objectSpread(_objectSpread({}, pin), {}, {\n        pin1: pin1\n      }));\n\n      if (pin1 != '') {\n        pin2Ref.current.focus();\n      }\n    },\n    value: pin1,\n    keyboardType: \"numeric\",\n    maxLength: 1,\n    style: styles.cellInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    ref: pin2Ref,\n    onChangeText: function onChangeText(pin2) {\n      setPin(_objectSpread(_objectSpread({}, pin), {}, {\n        pin2: pin2\n      }));\n\n      if (pin2 != '') {\n        pin3Ref.current.focus();\n      }\n    },\n    value: pin2,\n    keyboardType: \"numeric\",\n    maxLength: 1,\n    style: styles.cellInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    ref: pin3Ref,\n    onChangeText: function onChangeText(pin3) {\n      setPin(_objectSpread(_objectSpread({}, pin), {}, {\n        pin3: pin3\n      }));\n\n      if (pin3 != '') {\n        pin4Ref.current.focus();\n      }\n    },\n    value: pin3,\n    keyboardType: \"numeric\",\n    maxLength: 1,\n    style: styles.cellInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 21\n    }\n  }), React.createElement(TextInput, {\n    ref: pin4Ref,\n    onChangeText: function onChangeText(pin4) {\n      setPin(_objectSpread(_objectSpread({}, pin), {}, {\n        pin4: pin4\n      }));\n    },\n    value: pin4,\n    keyboardType: \"numeric\",\n    maxLength: 1,\n    style: styles.cellInput,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 166,\n      columnNumber: 21\n    }\n  })), React.createElement(View, {\n    style: styles.button,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 17\n    }\n  }, React.createElement(TouchableOpacity, {\n    style: styles.signIn,\n    onPress: submitHandler,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 21\n    }\n  }, React.createElement(LinearGradient, {\n    colors: ['#4700b3', '#4700b3'],\n    style: styles.signIn,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 25\n    }\n  }, React.createElement(Text, {\n    style: [styles.textSign, {\n      color: '#fff'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 29\n    }\n  }, \"Verify\")))), React.createElement(View, {\n    style: styles.textPrivate,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 17\n    }\n  }, React.createElement(Text, {\n    style: [{\n      fontFamily: 'nunito-semi'\n    }, {\n      color: 'grey'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 200,\n      columnNumber: 21\n    }\n  }, \"Didn't get code?\"), React.createElement(TouchableOpacity, {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 21\n    }\n  }, React.createElement(Text, {\n    style: [{\n      fontFamily: 'nunito-bold'\n    }, {\n      color: '#4700b3'\n    }],\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 25\n    }\n  }, \" \", \"Resend OTP\"))))));\n};\n\nexport default Otp;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#4700b3'\n  },\n  header: {\n    flex: 5,\n    justifyContent: 'flex-end',\n    paddingHorizontal: 20,\n    paddingBottom: 50\n  },\n  footer: {\n    flex: 1,\n    backgroundColor: '#fff',\n    borderTopLeftRadius: 30,\n    borderTopRightRadius: 30,\n    paddingHorizontal: 30,\n    paddingVertical: 30\n  },\n  text_footer: {\n    color: '#05375a',\n    fontSize: 18\n  },\n  action: {\n    flexDirection: 'row',\n    marginTop: 15,\n    borderBottomColor: '#4700b3',\n    borderBottomWidth: 2\n  },\n  button: {\n    alignItems: 'center',\n    marginTop: 50,\n    paddingBottom: 10\n  },\n  signIn: {\n    width: '100%',\n    height: 50,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderRadius: 30,\n    elevation: 7\n  },\n  textSign: {\n    fontFamily: 'nunito-bold',\n    fontSize: 20\n  },\n  textPrivate: {\n    flexDirection: 'row',\n    flexWrap: 'wrap',\n    marginTop: 20\n  },\n  color_textPrivate: {\n    color: 'grey'\n  },\n  containerInput: {\n    flexDirection: 'row',\n    alignItems: 'center',\n    justifyContent: 'space-evenly'\n  },\n  cellInput: {\n    textAlign: \"center\",\n    fontSize: 25,\n    paddingVertical: 11,\n    width: 40,\n    margin: 5,\n    justifyContent: 'center',\n    alignItems: 'center',\n    borderBottomWidth: 2,\n    borderBottomColor: '#4700b3'\n  }\n});","map":{"version":3,"sources":["D:/FINAL/Project/pgp/src/Otp.js"],"names":["React","useRef","useEffect","useState","Animatable","LinearGradient","FontAwesome","Feather","BorderlessButton","axios","Otp","route","navigation","params","UserId","otp","otpPin2","JSON","stringify","pin1Ref","pin2Ref","pin3Ref","pin4Ref","pin1","pin2","pin3","pin4","pin","setPin","submitHandler","otpPin","console","log","config","method","url","headers","data","key","response","success","push","alert","styles","container","flexGrow","justifyContent","header","footer","fontFamily","fontSize","color","paddingBottom","containerInput","current","focus","cellInput","button","signIn","textSign","textPrivate","StyleSheet","create","flex","backgroundColor","paddingHorizontal","borderTopLeftRadius","borderTopRightRadius","paddingVertical","text_footer","action","flexDirection","marginTop","borderBottomColor","borderBottomWidth","alignItems","width","height","borderRadius","elevation","flexWrap","color_textPrivate","textAlign","margin"],"mappings":"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","sourcesContent":["import React,{useRef,useEffect, useState} from 'react';\r\nimport {\r\n    View,\r\n    Text,\r\n    Button,\r\n    TouchableOpacity,\r\n    Dimensions,\r\n    TextInput,\r\n    Platform,\r\n    StyleSheet,\r\n    ScrollView,\r\n    StatusBar,\r\n    SafeAreaView,\r\n    Keyboard,\r\n    RefreshControl\r\n} from 'react-native';\r\n\r\nimport * as Animatable from 'react-native-animatable';\r\nimport { LinearGradient } from 'expo-linear-gradient'\r\nimport FontAwesome from 'react-native-vector-icons/FontAwesome';\r\nimport Feather from 'react-native-vector-icons/Feather';\r\nimport { BorderlessButton } from 'react-native-gesture-handler';\r\n\r\nimport axios from 'axios'\r\n\r\n\r\n\r\nconst Otp = ({ route, navigation }) => {\r\n\r\n    const { UserId,otp } = route.params;\r\n    const otpPin2 = JSON.stringify(otp)\r\n    const pin1Ref = React.useRef()\r\n    const pin2Ref = React.useRef()\r\n    const pin3Ref = React.useRef()\r\n    const pin4Ref = React.useRef()\r\n    const [pin, setPin] = React.useState({\r\n\r\n        pin1: '',\r\n        pin2: '',\r\n        pin3: '',\r\n        pin4: ''\r\n    });\r\n    \r\n\r\nconst { pin1, pin2, pin3, pin4 } = pin\r\n\r\n\r\n\r\n    \r\n   \r\n    async function submitHandler () {\r\n        const otpPin = '' + pin1 + pin2 + pin3 + pin4 ;\r\n        console.log(otpPin)\r\n        if(otpPin === otpPin2){\r\n        try{\r\n          var config = {\r\n              method: 'post',\r\n              url: 'http://127.0.0.1:3000/api/v1/otp/get',\r\n              headers: { },\r\n              data : UserId\r\n            };\r\n            const key = await axios(config)\r\n            const response = key\r\n            console.log(response)\r\n            if(response.data.success){\r\n              navigation.push('Login')\r\n           }\r\n          else{\r\n              alert(\"Something went wrong\")\r\n          }\r\n          }catch(error){\r\n              console.log(error)\r\n              alert(error)\r\n          }\r\n        }\r\n        else{\r\n            alert(\"Wrong OTP\")\r\n        }\r\n     \r\n }\r\n    \r\n\r\n\r\n    return (\r\n\r\n        \r\n        <View style={styles.container}>\r\n<ScrollView contentContainerStyle={{flexGrow: 1, justifyContent: 'center'}}>\r\n            <StatusBar backgroundColor='#4700b3' barStyle=\"light-content\" />\r\n\r\n\r\n            <View style={styles.header} />\r\n            <Animatable.View\r\n                animation=\"fadeInUp\"\r\n                style={styles.footer}\r\n            >\r\n                <Text style={{\r\n                    fontFamily: 'nunito-bold',\r\n                    fontSize: 28,\r\n                    color: '#4700b3',\r\n\r\n\r\n\r\n                }}>Verification Code</Text>\r\n                <Text style={{\r\n                    fontFamily: 'nunito-semi',\r\n                    fontSize: 15,\r\n                    paddingBottom: 30,\r\n                    color: 'grey',\r\n\r\n                }}>Enter the OTP code sent to your email</Text>\r\n\r\n                <View style={styles.containerInput}>\r\n\r\n                    <TextInput\r\n                    ref={pin1Ref}\r\n                    onChangeText={(pin1)=> { \r\n                        setPin({...pin,pin1:pin1})\r\n                         if(pin1!=''){\r\n                            pin2Ref.current.focus()\r\n                            \r\n                         } \r\n                         \r\n                        }}\r\n                    value={pin1}\r\n                        keyboardType=\"numeric\"\r\n                        maxLength={1}\r\n                        style={styles.cellInput}\r\n                        \r\n                    />\r\n\r\n\r\n                    <TextInput \r\n                    ref={pin2Ref}\r\n                    onChangeText={(pin2)=> {\r\n                        setPin({ ...pin,pin2:pin2})\r\n                        if(pin2!=''){\r\n                            pin3Ref.current.focus()\r\n                            \r\n                         } \r\n                         \r\n                    }}\r\n                    value={pin2}\r\n                        keyboardType=\"numeric\" \r\n                        maxLength={1}\r\n                        style={styles.cellInput}\r\n                    ></TextInput>\r\n\r\n\r\n                    <TextInput \r\n                     ref={pin3Ref}\r\n                    onChangeText={(pin3)=> {\r\n                        setPin({...pin,pin3:pin3})\r\n                        \r\n                        if(pin3!=''){\r\n                            \r\n                            pin4Ref.current.focus()\r\n                         } \r\n                    }}\r\n                    value={pin3}\r\n                        keyboardType=\"numeric\" \r\n                        maxLength={1}\r\n                        style={styles.cellInput}\r\n                    ></TextInput>\r\n\r\n                    <TextInput \r\n                     ref={pin4Ref}\r\n                     \r\n                    onChangeText={(pin4)=>{\r\n                        \r\n                    setPin({...pin,pin4:pin4})\r\n\r\n                    }}\r\n                   \r\n                    value={pin4}\r\n                        keyboardType=\"numeric\" \r\n                        maxLength={1}\r\n                        style={styles.cellInput}\r\n                    ></TextInput>\r\n\r\n                </View>\r\n                <View style={styles.button}>\r\n                    <TouchableOpacity\r\n                        style={styles.signIn}\r\n                        onPress={submitHandler}\r\n                        // onPress={() => navigation.navigate('NewPass')}\r\n                    >\r\n                        <LinearGradient\r\n                            colors={['#4700b3', '#4700b3']}\r\n                            style={styles.signIn}\r\n                        >\r\n                            <Text style={[styles.textSign, {\r\n                                color: '#fff',\r\n                            }]}>Verify</Text>\r\n                        </LinearGradient>\r\n                    </TouchableOpacity>\r\n                </View>\r\n\r\n                <View style={styles.textPrivate}>\r\n                    <Text style={[{ fontFamily: 'nunito-semi' }, { color: 'grey' }]}>\r\n                        Didn't get code?\r\n                </Text>\r\n                    <TouchableOpacity>\r\n                        <Text style={[{ fontFamily: 'nunito-bold' }, { color: '#4700b3' }]}>{\" \"}Resend OTP</Text>\r\n                    </TouchableOpacity>\r\n                    \r\n                </View>\r\n\r\n            </Animatable.View>\r\n            </ScrollView>\r\n        </View>\r\n\r\n\r\n    );\r\n};\r\n\r\nexport default Otp;\r\n\r\nconst styles = StyleSheet.create({\r\n    container: {\r\n        flex: 1,\r\n        backgroundColor: '#4700b3'\r\n    },\r\n\r\n    header: {\r\n        flex: 5,\r\n        justifyContent: 'flex-end',\r\n        paddingHorizontal: 20,\r\n        paddingBottom: 50\r\n    },\r\n    footer: {\r\n        flex: 1,\r\n        backgroundColor: '#fff',\r\n        borderTopLeftRadius: 30,\r\n        borderTopRightRadius: 30,\r\n        paddingHorizontal: 30,\r\n        paddingVertical: 30\r\n    },\r\n    text_footer: {\r\n        color: '#05375a',\r\n        fontSize: 18,\r\n\r\n    },\r\n    action: {\r\n        flexDirection: 'row',\r\n        marginTop: 15,\r\n        borderBottomColor: '#4700b3',\r\n        borderBottomWidth: 2,\r\n    },\r\n    button: {\r\n        alignItems: 'center',\r\n        marginTop: 50,\r\n        paddingBottom: 10,\r\n    },\r\n    signIn: {\r\n        width: '100%',\r\n        height: 50,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderRadius: 30,\r\n        elevation: 7,\r\n    },\r\n    textSign: {\r\n        fontFamily: 'nunito-bold',\r\n        fontSize: 20,\r\n    },\r\n    textPrivate: {\r\n        flexDirection: 'row',\r\n        flexWrap: 'wrap',\r\n        marginTop: 20\r\n    },\r\n    color_textPrivate: {\r\n        color: 'grey'\r\n    },\r\n    containerInput: {\r\n        flexDirection: 'row',\r\n        alignItems: 'center',\r\n        justifyContent: 'space-evenly'\r\n    },\r\n\r\n    cellInput: {\r\n        textAlign: \"center\",\r\n        fontSize: 25,\r\n        \r\n        paddingVertical: 11,\r\n        width: 40,\r\n        margin: 5,\r\n        justifyContent: 'center',\r\n        alignItems: 'center',\r\n        borderBottomWidth: 2,\r\n        borderBottomColor: '#4700b3'\r\n\r\n\r\n    }\r\n});"]},"metadata":{},"sourceType":"module"}